version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: timeline-frontend
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - timeline-network

  # Backend service (placeholder)
  backend:
    image: node:18-alpine
    container_name: timeline-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    # volumes:
    #   - ./backend:/app
    # working_dir: /app
    # command: ["npm", "start"]
    command: ["sh", "-c", "echo 'Backend service placeholder' && sleep infinity"]
    restart: unless-stopped
    networks:
      - timeline-network

  # Database service (placeholder)
  database:
    image: postgres:15-alpine
    container_name: timeline-db
    environment:
      - POSTGRES_DB=timeline_app
      - POSTGRES_USER=timeline_user
      - POSTGRES_PASSWORD=timeline_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - timeline-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: timeline-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - timeline-network

volumes:
  postgres_data:
  redis_data:

networks:
  timeline-network:
    driver: bridge